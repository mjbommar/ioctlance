[project]
name = "ioctlance"
version = "0.2.0"
description = "Modern Windows driver vulnerability scanner using symbolic execution"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Original IOCTLance Authors"},
    {name = "Michael Bommarito", email = "michael.bommarito@gmail.com"},
]
maintainers = [
    {name = "Michael Bommarito", email = "michael.bommarito@gmail.com"},
]
license = {text = "MIT"}
dependencies = [
    "angr>=9.2.170",
    "capstone>=5.0.3",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    # Note: Unicorn support disabled - angr 9.2.170 has compatibility issues with all unicorn versions
    # The "Unicorn is not installed" warning is non-critical as angr uses its native engine
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "python-multipart>=0.0.20",
    "aiofiles>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "ipdb>=0.13.13",
    "ipython>=9.4.0",
]

[project.scripts]
ioctlance = "ioctlance.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/ioctlance"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=src --cov-report=html --cov-report=term"
testpaths = ["tests"]
python_files = "test_*.py *_test.py"
asyncio_mode = "auto"

[tool.ruff]
line-length = 120  # Increased for better readability
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "W",      # pycodestyle warnings
    "B",      # flake8-bugbear
    "UP",     # pyupgrade
    "ASYNC",  # flake8-async
]
ignore = [
    # Line length - sometimes long lines are more readable
    "E501",   
    
    # Bare except - sometimes we need to catch all exceptions
    "E722",   
    
    # Module level imports not at top - sometimes needed for lazy loading
    "E402",   
    
    # Complexity warnings - some functions are necessarily complex
    "C901",   
    
    # Security warnings - we're careful with subprocess usage
    "S603",   # subprocess without shell=False
    "S607",   # Starting process with partial path
    
    # Too many arguments/locals/statements - sometimes necessary
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    
    # Import at top of file - sometimes we need lazy imports
    "I001",    
    
    # Unused imports/variables - handled by other tools
    "F401",   # Module imported but unused (handled case by case)
    "F403",   # Star imports used - needed for hook modules
    "F841",   # Local variable assigned but never used
    
    # Loop variables - sometimes we iterate for side effects
    "B007",   # Loop control variable not used within loop body
]

[tool.ruff.lint.per-file-ignores]
# Test files can have more relaxed rules
"tests/**/*.py" = [
    "S101",   # Use of assert detected
    "S105",   # Possible hardcoded password
    "S106",   # Possible hardcoded password
]

# CLI can have print statements
"src/ioctlance/cli.py" = [
    "T201",   # Print found
]

[tool.ruff.lint.mccabe]
# Increase complexity threshold
max-complexity = 20

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
files = "src/**/*.py"

[dependency-groups]
dev = [
    "pytest-timeout>=2.4.0",
]
